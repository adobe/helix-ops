version: 2.1

description: |
  Configures monitoring and alerting in New Relic, and links to Statuspage for public visibility of Project Helix services.

executors:
    node8:
        docker:
            - image: circleci/node:8

commands:
  config-env:
    description: Configures the build environment
    steps:
      - run:
          name: Configure Environment
          command: echo -e "LOG_LEVEL=info\n" > .env

  config-wsk:
    description: Sets the OpenWhisk properties
    steps:
      - run:
          name: Configure OpenWhisk
          command: echo -e "APIHOST=https://adobeioruntime.net\nNAMESPACE=helix\nAUTH=$WSK_AUTH\n" > ~/.wskprops

  monitoring:
    description: Sets up the monitoring
    parameters:
        tool_path:
            type: string
            default: "./node_modules/.bin"
            description: The path to the monitoring automation tooling
        action_namespace:
            type: string
            default: "helix"
            description: The name of the namespace where the action is deployed
        action_package:
            type: string
            default: "helix-services"
            description: The package name of the deployed action
        action_name:
            type: string
            default: ""
            description: The name of the deployed action
        universal:
            type: boolean
            default: false
            description: The action is deployed in universal runtime
        universal_host:
            type: string
            default: "helix-pages.anywhere.run"
            description: The host name of the universal runtime
        aws:
            type: boolean
            default: false
            description: Also monitor the action in AWS (deprecated, use "universal" instead)
        adobeio_host:
            type: string
            default: "adobeioruntime.net"
            description: The host name of the Adobe I/O server
        aws_api:
            type: env_var_name
            default: HLX_AWS_API
            description: The AWS API to use if AWS is set
        aws_region:
            type: env_var_name
            default: HLX_AWS_REGION
            description: The AWS region to use if AWS is set
        incubator:
            type: boolean
            default: false
            description: Flag as incubator project
        newrelic_auth:
            type: env_var_name
            default: NEWRELIC_AUTH
            description: The admin's API key for your New Relic account (not the user API key!)
        newrelic_name:
            type: string
            default: ""
            description: The name to be used for the New Relic monitor, alert policy and notification channel
        newrelic_url:
            type: string
            default: ""
            description: The URL to monitor in New Relic
        newrelic_type: 
            type: string
            default: ""
            description: The type of monitor (api or browser)
        newrelic_locations: 
            type: string
            default: ""
            description: The comma-separated list of locations to use
        newrelic_frequency: 
            type: integer
            default: 0
            description: The frequency to trigger the monitor in minutes
        newrelic_script: 
            type: string
            default: ""
            description: The path to the custom monitor script to use
        newrelic_group_policy: 
            type: string
            default: ""
            description: A collective alert policy in New Relic to add the monitor to
        statuspage_auth:
            type: env_var_name
            default: STATUSPAGE_AUTH
            description: The API user key for your Statuspage account (this is the user API key)
        statuspage_page_id:
            type: env_var_name
            default: STATUSPAGE_PAGE_ID
            description: The ID of the page to add components to in Statuspage
        statuspage_incubator_page_id:
            type: env_var_name
            default: STATUSPAGE_INCUBATOR_PAGE_ID
            description: The ID of the page to add incubator components to in Statuspage
        statuspage_name:
            type: string
            default: ""
            description: The name to be used for the Statuspage component
        statuspage_group:
            type: string
            default: ""
            description: The name of the component group in Statuspage to add the new component to
    steps:
      - run:
          name: Ensure Installation of CLI
          command: if [ ! -f ./node_modules/.bin/newrelic ]; then npm i --no-save @adobe/helix-ops; fi
      - run:
          name: Monitoring Setup
          command: |
              # config params
              toolPath="<< parameters.tool_path >>"
              actionNS="<< parameters.action_namespace >>"
              actionPackage="<< parameters.action_package >>"
              actionName="<< parameters.action_name >>"
              universal=<< parameters.universal >>
              universalHost="<< parameters.universal_host >>"
              aws=<< parameters.aws >> #deprecated
              adobeioHost="<< parameters.adobeio_host >>"
              awsApi="<< parameters.aws_api >>"
              awsRegion="<< parameters.aws_region >>"
              incubator=<< parameters.incubator >>
              nrName="<< parameters.newrelic_name >>"
              nrURL="<< parameters.newrelic_url >>"
              nrType="<< parameters.newrelic_type >>"
              nrLocations="<< parameters.newrelic_locations >>"
              nrFrequency="<< parameters.newrelic_frequency >>"
              nrScript="<< parameters.newrelic_script >>"
              nrGroupPolicy="<< parameters.newrelic_group_policy >>" 
              spName="<< parameters.statuspage_name >>"
              spGroup="<< parameters.statuspage_group >>"
              spEmail=""
              nrAdobeioURL=""
              nrAdobeioName=""
              nrAWSURL=""
              nrAWSName=""
              universal=${universal:-${aws}} # backward compatibility

              # statuspage automation
              if [ "${spName}${spGroup}" != "" ]; then
                spEmail=`node ${toolPath}/statuspage setup --silent \
                  ${spName:+--name "${spName}"} \
                  ${spGroup:+--group "${spGroup}"} \
                  ${incubator:+--incubator ${incubator}} \
                  ${universal:+--universal ${universal}}`
              fi

              # new relic automation
              if [ "${actionName}" == "" ]; then
                # extract action name from package name
                actionName=`node -e "console.log(require('./package.json').name.replace('@adobe/helix-', ''))"`
              fi
              # use package version as action version
              actionVersion=`node -e "console.log(require('./package.json').version.match(/^[0-9]+/)[0])"`
              actionStatus="/_status_check/healthcheck.json"
              if [ "${nrName}" == "" ]; then
                # use package name
                nrName=`node -e "console.log(require('./package.json').name)"`
              fi
              if [ "${nrURL}" == "" ]; then
                if [ ${universal} == true ]; then
                  # assemble universal runtime url
                  nrURL="https://${universalHost}/${actionPackage}/${actionName}@v${actionVersion}${actionStatus}"
                  # add adobe i/o url and name as secondary monitor
                  nrAdobeioURL="https://${adobeioHost}/api/v1/web/${actionNS}/${actionPackage}/${actionName}@v${actionVersion}${actionStatus}"
                  nrAdobeioName="${nrName}.adobeio"
                  # add AWS url and name as secondary monitor
                  nrAWSURL="https://${awsApi}.execute-api.${awsRegion}.amazonaws.com/${actionPackage}/${actionName}/v${actionVersion}${actionStatus}"
                  nrAWSName="${nrName}.aws"
                else 
                  # fall back to adobe i/o only
                  nrURL="https://${adobeioHost}/api/v1/web/${actionNS}/${actionPackage}/${actionName}@v${actionVersion}${actionStatus}"
                fi
              fi
              node ${toolPath}/newrelic setup --url ${nrURL} \
                ${nrAdobeioURL:+--url "${nrAdobeioURL}"} \
                ${nrAWSURL:+--url "${nrAWSURL}"} \
                ${nrName:+--name "${nrName}"} \
                ${nrAdobeioName:+--name "${nrAdobeioName}"} \
                ${nrAWSName:+--name "${nrAWSName}"} \
                ${spEmail:+--email ${spEmail}} \
                ${nrType:+--type ${nrType}} \
                ${nrLocations:+--locations ${nrLocations}} \
                ${nrFrequency:+--frequency ${nrFrequency}} \
                ${nrScript:+--script "${nrScript}"} \
                ${nrGroupPolicy:+--group_policy "${nrGroupPolicy}"} \
                ${incubator:+--incubator ${incubator}}
